unbind C-b
set -g prefix `
bind-key ` send-prefix

set -g default-terminal "xterm-256color"

# force tmux to use utf-8
setw -gq utf8 on

# unecessary?
# set -g terminal-overrides 'xterm:colors=88'
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# so we have more of history
set -g history-limit 30000

# vi keybindings
set-option -g status-keys vi
set-window-option -g mode-keys vi

# vi-style copying to system clipboard
setw -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'r' send -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# run-shell ~/Documents/projects/tmux-pain-control/pain_control.tmux

# http://www.johnhawthorn.com/2012/09/vi-escape-delays/
# Removes annoying escape waiting
set -s escape-time 0

# http://unix.stackexchange.com/questions/21742/renumbering-windows-in-tmux
# prefix + r renumbers windows
bind r                                      \
    move-window -r\;                        \
    display-message "Windows reordered..."

#status bar stuff
set-option -g status on                # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
set -g status-justify centre           # center window list for clarity

# set color for status bar/window bar
set -g status-bg "#000000"

#setw -g window-status-fg white
#setw -g window-status-bg "#000000"

setw -g window-status-current-fg "#000000"
setw -g window-status-current-bg "#bbeeaa"
setw -g window-status-format '#[fg=#8ac378]#[bg=#555555] #I #[bg=#333333]#[fg=#8ac378] #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
setw -g window-status-current-format '#[fg=#bbeeaa]#[bg=#555555] #I #[bg=#333333]#[fg=#bbeeaa] #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
set -g window-status-separator " "

# Tab title http://stackoverflow.com/questions/28376611/how-to-automatically-rename-tmux-windows-to-the-current-directory
#set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
#eset -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
#set-option -g status-interval 1

# left status
set -g status-left ""
set-option -g status-justify left

# right status
set -g status-right "#[fg=#bbeeaa]%B %d, %I:%M %p / #{battery_percentage} Â· ðŸŒ•"


# color for panes
# for active panes
set -g pane-active-border-fg "#bbff22"

# for non-active panes
# set -g pane-border-style-fg "#26A6D1"

# resizing panes
bind-key -n S-Up resize-pane -U 5
bind-key -n S-Down resize-pane -D 5
bind-key -n S-Left resize-pane -L 5
bind-key -n S-Right resize-pane -R 5

# http://mutelight.org/practical-tmux
# setw -g aggressive-resize on
setw -g aggressive-resize off

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# pane keybinds
bind-key -n C-\ split-window -h -c '#{pane_current_path}'
bind-key -n C-_ split-window -v -c '#{pane_current_path}'
# bind-key -n C-x kill-pane # conflicts with vim's ctrl-x

# window keybinds
bind-key -n C-t new-window
bind-key -n C-y command-prompt 'rename-window %%'
bind-key -n C-] next-window
bind-key -n C-[ previous-window

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'tmux-plugins/tmux-sensible'

#######################################################################################
#                                        PLUGINS
#######################################################################################

set-option -g status-position top
unbind-key -n Escape

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

